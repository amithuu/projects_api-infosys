# Generated by Django 4.2.4 on 2023-10-20 07:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="JobPost",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("title", models.CharField(max_length=255, validators=[()])),
                ("description", models.TextField(null=True)),
                (
                    "functional_area",
                    models.CharField(max_length=255, null=True, validators=[()]),
                ),
                (
                    "management_level",
                    models.CharField(max_length=255, null=True, validators=[()]),
                ),
                (
                    "job_type",
                    models.CharField(max_length=255, null=True, validators=[()]),
                ),
                ("opening_slots", models.IntegerField(default=0, validators=[()])),
                ("is_remote", models.BooleanField(default=False)),
                (
                    "schedule_days",
                    models.CharField(
                        choices=[
                            ("Monday-Friday", "monday-friday"),
                            ("Monday-Saturday", "monday-saturday"),
                            ("Flexible", "flexible"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                ("specific_timing", models.BooleanField(default=False)),
                ("start_specific_time", models.TimeField(null=True)),
                ("end_specific_time", models.TimeField(null=True)),
                ("flexible_timing", models.BooleanField(default=False)),
                ("flexible_time", models.TimeField(null=True)),
                (
                    "min_years_experience",
                    models.IntegerField(null=True, validators=[()]),
                ),
                (
                    "max_years_experience",
                    models.IntegerField(null=True, validators=[()]),
                ),
                ("education_level", models.CharField(max_length=30, null=True)),
                ("include_freshers", models.BooleanField(default=False)),
                (
                    "roles_responsibilities",
                    models.TextField(max_length=255, null=True, validators=[()]),
                ),
                ("pay_currency", models.CharField(max_length=4, null=True)),
                (
                    "min_pay",
                    models.CharField(max_length=255, null=True, validators=[()]),
                ),
                (
                    "max_pay",
                    models.CharField(max_length=255, null=True, validators=[()]),
                ),
                ("notice_period", models.IntegerField(validators=[()])),
                ("blind_hire", models.BooleanField(default=False)),
                ("hiring_status", models.CharField(max_length=30, null=True)),
                ("rejected_ids", models.JSONField(blank=True, null=True)),
                ("Company", models.UUIDField(blank=True, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Onboarding",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "onboarding_company_name",
                    models.CharField(max_length=255, validators=[()]),
                ),
                (
                    "onboarding_industry",
                    models.CharField(max_length=255, validators=[()]),
                ),
                (
                    "onboarding_scale",
                    models.CharField(
                        choices=[
                            ("Startup", "startup"),
                            ("Small", "small"),
                            ("Medium", "medium"),
                            ("Large", "large"),
                            ("MNC", "mnc"),
                        ],
                        max_length=255,
                        validators=[()],
                    ),
                ),
                ("total_employees", models.IntegerField(validators=[()])),
                (
                    "onboarding_company_vision",
                    models.TextField(max_length=255, validators=[()]),
                ),
                (
                    "onboarding_company_values",
                    models.TextField(max_length=255, validators=[()]),
                ),
                (
                    "onboarding_company_culture",
                    models.TextField(max_length=255, validators=[()]),
                ),
                (
                    "onboarding_linkedin",
                    models.URLField(max_length=128, unique=True, validators=[()]),
                ),
                (
                    "onboarding_website",
                    models.URLField(max_length=128, validators=[()]),
                ),
                ("onboarding_pan", models.CharField(max_length=256, validators=[()])),
                ("onboarding_gst", models.CharField(max_length=256, validators=[()])),
                (
                    "onboarding_headquarter",
                    models.CharField(max_length=256, validators=[()]),
                ),
                ("onboarding_have_branches", models.BooleanField(default=False)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OnboardingBranches",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "onboarding_branches",
                    models.CharField(max_length=255, validators=[()]),
                ),
                (
                    "onboarding",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="branches",
                        to="user_app.onboarding",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobPostSupplementPay",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Performance Bonus", "performance bonus"),
                            ("Yearly Bonus", "yearly bonus"),
                            ("Quarterly Bonus", "quarterly bonus"),
                            ("Commission", "commission"),
                            ("Overtime Pay", "overtime pay"),
                            ("Shift Allowance", "shift allowance"),
                            ("Joining Bonus", "joining bonus"),
                            ("ESOP", "esop"),
                        ],
                        max_length=255,
                        null=True,
                        validators=[()],
                    ),
                ),
                (
                    "job_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_post_supplement_pays",
                        to="user_app.jobpost",
                    ),
                ),
            ],
            options={
                "db_table": "job_post_supplement_pays",
            },
        ),
        migrations.CreateModel(
            name="JobPostSoftSkill",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255, null=True, validators=[()])),
                ("expertise", models.IntegerField(null=True, validators=[()])),
                (
                    "job_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_post_soft_skills",
                        to="user_app.jobpost",
                    ),
                ),
            ],
            options={
                "db_table": "job_post_soft_skills",
            },
        ),
        migrations.CreateModel(
            name="JobPostOverallExperience",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("min_experience", models.DateField(null=True)),
                ("max_experience", models.DateField(null=True)),
                (
                    "job_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_post_overall_experiences",
                        to="user_app.jobpost",
                    ),
                ),
            ],
            options={
                "db_table": "job_post_overall_experiences",
            },
        ),
        migrations.CreateModel(
            name="JobPostLocation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("location", models.CharField(max_length=255, null=True)),
                ("city", models.CharField(max_length=255, null=True)),
                ("state", models.CharField(max_length=255, null=True)),
                ("country", models.BooleanField(null=True)),
                (
                    "job_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_post_locations",
                        to="user_app.jobpost",
                    ),
                ),
            ],
            options={
                "db_table": "job_post_locations",
            },
        ),
        migrations.CreateModel(
            name="JobPostLanguage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255, null=True, validators=[()])),
                (
                    "expertise",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                ("deal_breaker", models.BooleanField(default=False, null=True)),
                (
                    "job_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_post_languages",
                        to="user_app.jobpost",
                    ),
                ),
            ],
            options={
                "db_table": "job_post_languages",
            },
        ),
        migrations.CreateModel(
            name="JobPostIndustryExperience",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255, null=True, validators=[()])),
                ("min_experience", models.IntegerField(null=True, validators=[()])),
                (
                    "job_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_post_industry_experiences",
                        to="user_app.jobpost",
                    ),
                ),
            ],
            options={
                "db_table": "job_post_industry_experiences",
            },
        ),
        migrations.CreateModel(
            name="JobPostHardSkill",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255, null=True, validators=[()])),
                ("deal_breaker", models.BooleanField(default=False, null=True)),
                ("expertise", models.IntegerField(null=True, validators=[()])),
                (
                    "job_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_post_hard_skills",
                        to="user_app.jobpost",
                    ),
                ),
            ],
            options={
                "db_table": "job_post_hard_skills",
            },
        ),
        migrations.CreateModel(
            name="JobPostCompanyExperience",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255, null=True, validators=[()])),
                ("min_experience", models.IntegerField(null=True, validators=[()])),
                (
                    "job_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_post_company_experiences",
                        to="user_app.jobpost",
                    ),
                ),
            ],
            options={
                "db_table": "job_post_company_experiences",
            },
        ),
        migrations.CreateModel(
            name="JobPostBenefits",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Performance Bonus", "performance bonus"),
                            ("Yearly Bonus", "yearly bonus"),
                            ("Quarterly Bonus", "quarterly bonus"),
                            ("Commission", "commission"),
                            ("Overtime Pay", "overtime pay"),
                            ("Shift Allowance", "shift allowance"),
                            ("Joining Bonus", "joining bonus"),
                            ("ESOP", "esop"),
                        ],
                        max_length=255,
                        null=True,
                        validators=[()],
                    ),
                ),
                (
                    "job_post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_post_benefits",
                        to="user_app.jobpost",
                    ),
                ),
            ],
            options={
                "db_table": "job_post_benefits",
            },
        ),
    ]
